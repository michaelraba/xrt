fftStepArray.m:    sprintf('%s','pause')
fftStepArray.m:        sprintf('%s','saving qMinusQbar...')
fftStepArray.m:        sprintf('%s%s','Saved velocity fluctuations into file ',saveStr);
fftStepArray.m:    sprintf('%s','start azimuthal')
fftStepArray.m:sprintf('%s','start azimuthal')
fftStepArray.m:sprintf('%s%d%s%d%s','done filling in a crosssec for timeBloc=', timeBloc, ' and t=',t,'.')
fftStepArray.m:        sprintf('%s','saving xdirPostFft...')
fftStepArray.m:        sprintf('%s%s','Saved xdirpostfft into file ',saveStr);
fftStep.asv:    sprintf('%s','pause')
fftStep.asv:        sprintf('%s','saving qMinusQbar...')
fftStep.asv:        sprintf('%s%s','Saved velocity fluctuations into file ',saveStr);
fftStep.asv:    sprintf('%s','start azimuthal')
fftStep.asv:sprintf('%s','start azimuthal')
fftStep.asv:sprintf('%s%d%s%d%s','done filling in a crosssec for timeBloc=', timeBloc, ' and t=',t,'.')
fftStep.asv:        sprintf('%s','saving xdirPostFft...')
fftStep.asv:        sprintf('%s%s','Saved xdirpostfft into file ',saveStr);
fftStep.m:    sprintf('%s','pause')
fftStep.m:        sprintf('%s','saving qMinusQbar...')
fftStep.m:        sprintf('%s%s','Saved velocity fluctuations into file ',saveStr);
fftStep.m:    sprintf('%s','start azimuthal')
fftStep.m:sprintf('%s','start azimuthal')
fftStep.m:sprintf('%s%d%s%d%s','done filling in a crosssec for timeBloc=', timeBloc, ' and t=',t,'.')
fftStep.m:        sprintf('%s','saving xdirPostFft...')
fftStep.m:        sprintf('%s%s','Saved xdirpostfft into file ',saveStr);
fftStepTimeAvg.m:        sprintf('%s','opening xdirPostFft...')
fftStepTimeAvg.m:        sprintf('%s%s','Saved xdirpostfft into file ',saveStr);
findAzimuthalModes_noTime.m:  %sprintf('%s','pause')
findAzimuthalModes_noTime.m:        %sprintf('%s','pause')
findAzimuthalModes_noTime.m:%sprintf('%s','pause')
initData2.m:    %sprintf('%s%s', '* Initializing ', initStr)
loadBloc.m:    sprintf('%s','pause')
main.m:%sprintf('%s','pause');
main.m:%sprintf('%s','pause');
main.m:  sprintf('%s%s%s%s%s%s%s%s','**************',newline,'Generating to file C',num2str(ncs),'t',num2str(ntimesteps),newline,'**************'   )
main.m:sprintf('%s%s','Saved velocity fluctuations into file ',saveStr);
main.m:sprintf('%s%s','Loaded velocity fluctuations from file ',saveStr);
main.m:%%sprintf('%s','pause');
main.m:%%sprintf('%s','pause');
main.m:sprintf('%s','pause');
main.m:%sprintf('%s','pause');
main.m:%sprintf('%s','pause');
main.m:%sprintf('%s','doTutkinEq8')
main.m:%sprintf('%s','doTutkinEq8')
main.m:%sprintf('%s','doTutkinEq8')
main.m:%sprintf('%s%d%s%d','doTutkinEq9 c=',c,',t=',t)
main.m:%sprintf('%s','doTutkinEq10');
main.m:%sprintf('%s%d%s%d','doTutkinEq9 c=',c,',t=',t)
main.m:%sprintf('%s%d%s%d','doTutkinEq9 c=',c,',t=',t)
main.m:%sprintf('%s','doTutkinEq8')
main.m:%sprintf('%s','pause');
main.m:%sprintf('%s','pause')
main.m:%%sprintf('%s%d%s%d','* eq 10, t=',t,'c=',c)
main.m:%%sprintf('%s','doTutkinEq8')
main.m:%%%  %sprintf('%s','doTutkinEq8')
main.m:%%%  %sprintf('%s%d%s%d','* eq 10, t=',t,'c=',c)
main.m:%%%  %sprintf('%s%d%s%d','* eq hellstrom.2.2, t=',t,'c=',c)
main.m:      %sprintf('%s%d%s%d','*t = ',t,'**c=',c)
main.m:      cc = sprintf( '%03d', c  ) ;
main.m:      tt = sprintf( '%04d', t  ) ;
main.m:        %sprintf('%s%d%s%d','*r = ',r);
main.m:      %sprintf('%s%d%s%d','*t = ',t,'**c=',c)
main.m:      cc = sprintf( '%03d', c  ) ;
main.m:      tt = sprintf( '%04d', t  ) ;
main.m:        %sprintf('%s%d%s%d','*r = ',r);
main.m:      %sprintf('%s%d%s%d','*t = ',t,'**c=',c)
main.m:      cc = sprintf( '%03d', c  ) ;
main.m:      tt = sprintf( '%04d', t  ) ;
main.m:        %sprintf('%s%d%s%d','*r = ',r);
main.m:    %sprintf('%s%s', '* Initializing ', initStr)
main.m:%%%%%      %sprintf('%s%s', '* Initializing ', initStr)
main.m:%sprintf('%s%d','Start windowing *m = ',m);
main.m:%sprintf('%s%d','Start windowing *m = ',m);
main.m:%sprintf('%s',"initData..")
main.m:%sprintf('%s','*t = ')
main.m:sprintf('%s','read circle and findQbar ')
main.m:%sprintf('%s','initialize QminusQbar for lot of timestep.')
main.m:%sprintf('%s','findqminusqbar')
main.m:%sprintf('%s','calculating streamwise fft')
main.m:%  %sprintf('%s%d%s%d','*L317 Stilda-calc, *tt = ',tt,'jj=',jj);
main.m:  %sprintf('%s%d%s%d','*L317 Stilda-calc, *tt = ',tt,'jj=',jj);
main.m:          %sprintf('%s','pause');
main.m:        %sprintf('%s','pause');
main.m:%%sprintf('%s','doTutkinEq10');
main.m:%%sprintf('%s%d%s%d','***Azimuth and crossSec: ',r,',',c)
main.m:%%sprintf('%s%d%s%d','***Ending mode and crosssection: ',r,',',c)
main.m:%%sprintf('%s','***done')
main.m:%  %sprintf('%s','hi');
main.m:%%sprintf('%s%d%s%d','***Azimuth and crossSec: ',r,',',c)
main.m:%               cc = %sprintf( '%04d', c - 1) ;
main.m:%               rr = %sprintf( '%04d', rrr(r)) ;
main.m:%               tt = %sprintf( '%04d', time ) ;
main.m:%               %sprintf('%s', fftFilename);
main.m:%    %sprintf('%s%d%d%s','time int for ', ii, jj, 'is');
main.m:%%sprintf('%s','bp');
main.m:%%sprintf('%s','bp');
main.m:%    %sprintf('%s%d%d%s','time int for ', ii, jj, 'is');
main.m:%%sprintf('%s','bp');
main.m:%    %%sprintf('%s%d%d%s','time int for ', ii, jj, 'is');
main.m:%%sprintf('%s','bp');
main.m:%%sprintf('%s','bp');
plotSkmr.m:      %sprintf('%s','pause');
plotSkmr.m:    %sprintf('%s','pause');
podClassic.m:sprintf('%s','take eigenvals');
podClassic.m:sprintf('%s','done');
radial_xcorr.m:sprintf('%s','hi')
rcorr.m:sprintf('%s','hi')
readCircles2.m:      sprintf('%s%d%s%d','*t = ',t,'**c=',c)
readCircles2.m:      cc = sprintf( '%03d', c  ) ;
readCircles2.m:      tt = sprintf( '%04d', t  ) ;
readCircles2.m:      sprintf('%s%s', 'file opening path is:',fileName)
readCircles3.m:      sprintf('%s%d%s%d','*t = ',t,'**c=',c)
readCircles3.m:      cc = sprintf( '%03d', c  ) ;
readCircles3.m:      tt = sprintf( '%04d', t  ) ;
readDataAndFindVeloFluctuation.m:sprintf('%s','pause')
readDataAndFindVeloFluctuation.m:sprintf('%s','initialize QminusQbar for lot of timestep.')
readDataAndFindVeloFluctuation.m:%sprintf('%s','findqminusqbar')
redesign.m:%sprintf('%s','pause');
redesign.m:%sprintf('%s','pause');
redesign.m:  sprintf('%s%s%s%s%s%s%s%s','**************',newline,'Generating to file C',num2str(ncs),'t',num2str(ntimesteps),newline,'**************'   )
redesign.m:sprintf('%s%s','Saved velocity fluctuations into file ',saveStr);
redesign.m:sprintf('%s%s','Loaded velocity fluctuations from file ',saveStr);
redesign.m:%%sprintf('%s','pause');
redesign.m:%%sprintf('%s','pause');
redesign.m:%sprintf('%s','pause');
redesign.m:%sprintf('%s','pause');
redesign.m:%sprintf('%s','pause');
redesign.m:%sprintf('%s','doTutkinEq8')
redesign.m:%sprintf('%s','doTutkinEq8')
redesign.m:%sprintf('%s','doTutkinEq8')
redesign.m:%sprintf('%s%d%s%d','doTutkinEq9 c=',c,',t=',t)
redesign.m:%sprintf('%s','doTutkinEq10');
redesign.m:%sprintf('%s%d%s%d','doTutkinEq9 c=',c,',t=',t)
redesign.m:%sprintf('%s%d%s%d','doTutkinEq9 c=',c,',t=',t)
redesign.m:%sprintf('%s','doTutkinEq8')
redesign.m:%sprintf('%s','pause');
redesign.m:%sprintf('%s','pause')
redesign.m:%%sprintf('%s%d%s%d','* eq 10, t=',t,'c=',c)
redesign.m:%%sprintf('%s','doTutkinEq8')
redesign.m:%%%  %sprintf('%s','doTutkinEq8')
redesign.m:%%%  %sprintf('%s%d%s%d','* eq 10, t=',t,'c=',c)
redesign.m:%%%  %sprintf('%s%d%s%d','* eq hellstrom.2.2, t=',t,'c=',c)
redesign.m:      %sprintf('%s%d%s%d','*t = ',t,'**c=',c)
redesign.m:      cc = sprintf( '%03d', c  ) ;
redesign.m:      tt = sprintf( '%04d', t  ) ;
redesign.m:        %sprintf('%s%d%s%d','*r = ',r);
redesign.m:      %sprintf('%s%d%s%d','*t = ',t,'**c=',c)
redesign.m:      cc = sprintf( '%03d', c  ) ;
redesign.m:      tt = sprintf( '%04d', t  ) ;
redesign.m:        %sprintf('%s%d%s%d','*r = ',r);
redesign.m:      %sprintf('%s%d%s%d','*t = ',t,'**c=',c)
redesign.m:      cc = sprintf( '%03d', c  ) ;
redesign.m:      tt = sprintf( '%04d', t  ) ;
redesign.m:        %sprintf('%s%d%s%d','*r = ',r);
redesign.m:    %sprintf('%s%s', '* Initializing ', initStr)
redesign.m:%%%%%      %sprintf('%s%s', '* Initializing ', initStr)
redesign.m:%sprintf('%s%d','Start windowing *m = ',m);
redesign.m:%sprintf('%s%d','Start windowing *m = ',m);
redesign.m:%sprintf('%s',"initData..")
redesign.m:%sprintf('%s','*t = ')
redesign.m:sprintf('%s','read circle and findQbar ')
redesign.m:%sprintf('%s','initialize QminusQbar for lot of timestep.')
redesign.m:%sprintf('%s','findqminusqbar')
redesign.m:%sprintf('%s','calculating streamwise fft')
redesign.m:%  %sprintf('%s%d%s%d','*L317 Stilda-calc, *tt = ',tt,'jj=',jj);
redesign.m:  %sprintf('%s%d%s%d','*L317 Stilda-calc, *tt = ',tt,'jj=',jj);
redesign.m:          %sprintf('%s','pause');
redesign.m:        %sprintf('%s','pause');
redesign.m:      %sprintf('%s','pause');
redesign.m:    %sprintf('%s','pause');
redesign.m:%%sprintf('%s','doTutkinEq10');
redesign.m:%%sprintf('%s%d%s%d','***Azimuth and crossSec: ',r,',',c)
redesign.m:%%sprintf('%s%d%s%d','***Ending mode and crosssection: ',r,',',c)
redesign.m:%%sprintf('%s','***done')
redesign.m:%  %sprintf('%s','hi');
redesign.m:%%sprintf('%s%d%s%d','***Azimuth and crossSec: ',r,',',c)
redesign.m:%               cc = %sprintf( '%04d', c - 1) ;
redesign.m:%               rr = %sprintf( '%04d', rrr(r)) ;
redesign.m:%               tt = %sprintf( '%04d', time ) ;
redesign.m:%               %sprintf('%s', fftFilename);
redesign.m:%    %sprintf('%s%d%d%s','time int for ', ii, jj, 'is');
redesign.m:%%sprintf('%s','bp');
redesign.m:%%sprintf('%s','bp');
redesign.m:%    %sprintf('%s%d%d%s','time int for ', ii, jj, 'is');
redesign.m:%%sprintf('%s','bp');
redesign.m:%    %%sprintf('%s%d%d%s','time int for ', ii, jj, 'is');
redesign.m:%%sprintf('%s','bp');
redesign.m:%%sprintf('%s','bp');
schrittweiseFft.m:sprintf('%s','pause')
schrittweiseFft.m:sprintf('%s','initialize QminusQbar for lot of timestep.')
schrittweiseFft.m:%sprintf('%s','findqminusqbar')
untitled.m:    sprintf('%s','hi');
untitled.m:    sprintf('%s','hi')
untitled.m:    sprintf('%s','hi')
untitled.m:    sprintf('%s','hi')
xcG.m:  sprintf('%s%s%s%s%s%s%s%s','**************',newline,'Generating to file C',num2str(ncs),'t',num2str(ntimesteps),newline,'**************'   )
xcG.m:sprintf('%s','Saving velocity fluctuations into file...')
xcG.m:sprintf('%s%s','Saved velocity fluctuations into file ',saveStr);
xcG.m:sprintf('%s%s','Loaded velocity fluctuations from file ',saveStr);
xcG.m:sprintf('%s','done qMinusQbar.')
xcG.m:sprintf('%s','done qMinusQbar.')
xcorr.m:sprintf('%s','hi')
